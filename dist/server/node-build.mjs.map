{"version":3,"file":"node-build.mjs","sources":["../../server/routes/demo.ts","../../server/socket.ts","../../server/index.ts","../../server/node-build.ts"],"sourcesContent":["import { RequestHandler } from \"express\";\nimport { DemoResponse } from \"@shared/api\";\n\nexport const handleDemo: RequestHandler = (req, res) => {\n  const response: DemoResponse = {\n    message: \"Hello from Express server\",\n  };\n  res.status(200).json(response);\n};\n","import type http from \"http\";\nimport { Server as IOServer, type Server, type Socket } from \"socket.io\";\nimport { Question, QuestionsState } from \"@shared/api\";\n\nlet io: Server | null = null;\nconst state: QuestionsState = {\n  questions: [],\n  selectedId: null,\n};\n\nexport function initSocket(httpServer: http.Server) {\n  if (io) return io;\n  io = new IOServer(httpServer, {\n    path: \"/socket.io\",\n    cors: { origin: true, credentials: true },\n  });\n\n  io.on(\"connection\", (socket: Socket) => {\n    socket.emit(\"questions:init\", state);\n\n    socket.on(\"question:submit\", (payload: Omit<Question, \"id\" | \"createdAt\"> & { text: string }) => {\n      const q: Question = {\n        id: crypto.randomUUID(),\n        firstName: payload.firstName?.toString().slice(0, 60) || \"\",\n        lastName: payload.lastName?.toString().slice(0, 60) || \"\",\n        text: payload.text?.toString().slice(0, 500) || \"\",\n        createdAt: Date.now(),\n        hidden: false,\n      };\n      addQuestion(q);\n    });\n\n    socket.on(\"director:select\", (id: string | null) => {\n      if (!id) {\n        state.selectedId = null;\n        broadcast();\n        return;\n      }\n      if (state.questions.some((q) => q.id === id)) {\n        state.selectedId = id;\n        broadcast();\n      }\n    });\n\n    socket.on(\"director:hide\", (id?: string | null) => {\n      if (id) {\n        const q = state.questions.find((x) => x.id === id);\n        if (q) q.hidden = true;\n        if (state.selectedId === id) state.selectedId = null;\n      } else if (state.selectedId) {\n        const q = state.questions.find((x) => x.id === state.selectedId);\n        if (q) q.hidden = true;\n        state.selectedId = null;\n      }\n      broadcast();\n    });\n  });\n\n  return io;\n}\n\nexport function getIO() {\n  return io;\n}\n\nexport function getState(): QuestionsState {\n  return state;\n}\n\nexport function addQuestion(q: Question) {\n  state.questions.unshift(q);\n  broadcastNew(q);\n}\n\nexport function selectQuestion(id: string | null) {\n  if (!id) {\n    state.selectedId = null;\n    broadcast();\n    return;\n  }\n  if (state.questions.find((q) => q.id === id)) {\n    state.selectedId = id;\n    broadcast();\n  }\n}\n\nexport function hideSelected(id?: string | null) {\n  if (id) {\n    const q = state.questions.find((x) => x.id === id);\n    if (q) q.hidden = true;\n    if (state.selectedId === id) state.selectedId = null;\n  } else if (state.selectedId) {\n    const q = state.questions.find((x) => x.id === state.selectedId);\n    if (q) q.hidden = true;\n    state.selectedId = null;\n  }\n  broadcast();\n}\n\nfunction broadcast() {\n  io?.emit(\"questions:update\", state);\n  if (state.selectedId) io?.emit(\"question:selected\", state.selectedId);\n}\n\nfunction broadcastNew(q: Question) {\n  io?.emit(\"question:new\", q);\n  broadcast();\n}\n","import \"dotenv/config\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport { handleDemo } from \"./routes/demo\";\nimport { addQuestion, getState, hideSelected, selectQuestion } from \"./socket\";\nimport type { SubmitQuestionRequest, SubmitQuestionResponse } from \"@shared/api\";\n\nexport function createServer() {\n  const app = express();\n\n  // Middleware\n  app.use(cors());\n  app.use(express.json());\n  app.use(express.urlencoded({ extended: true }));\n\n  // Example API routes\n  app.get(\"/api/ping\", (_req, res) => {\n    const ping = process.env.PING_MESSAGE ?? \"ping\";\n    res.json({ message: ping });\n  });\n\n  app.get(\"/api/demo\", handleDemo);\n\n  // Questions API\n  app.get(\"/api/questions\", (_req, res) => {\n    res.json(getState());\n  });\n\n  app.post(\"/api/questions\", (req, res) => {\n    const body = req.body as SubmitQuestionRequest;\n    const firstName = (body.firstName || \"\").toString().trim().slice(0, 60);\n    const lastName = (body.lastName || \"\").toString().trim().slice(0, 60);\n    const text = (body.text || \"\").toString().trim().slice(0, 2000).trim();\n\n    if (!firstName || !text) {\n      return res.status(400).json({ error: \"Champs requis manquants\" });\n    }\n\n    const q = {\n      id: crypto.randomUUID(),\n      firstName,\n      lastName,\n      text,\n      createdAt: Date.now(),\n      hidden: false,\n    };\n\n    addQuestion(q);\n\n    const response: SubmitQuestionResponse = { ok: true, question: q };\n    res.json(response);\n  });\n\n  app.post(\"/api/questions/select\", (req, res) => {\n    const id = (req.body?.id || null) as string | null;\n    selectQuestion(id);\n    res.json({ ok: true, selectedId: getState().selectedId });\n  });\n\n  app.post(\"/api/questions/hide\", (req, res) => {\n    const id = (req.body?.id || null) as string | null;\n    hideSelected(id);\n    res.json({ ok: true, selectedId: getState().selectedId });\n  });\n\n  return app;\n}\n","import path from \"path\";\nimport { createServer } from \"./index\";\nimport * as express from \"express\";\nimport http from \"http\";\nimport { initSocket } from \"./socket\";\n\nconst app = createServer();\nconst port = process.env.PORT || 3000;\n\n// In production, serve the built SPA files\nconst __dirname = import.meta.dirname;\nconst distPath = path.join(__dirname, \"../spa\");\n\n// Serve static files\napp.use(express.static(distPath));\n\n// Health\napp.get(\"/health\", (_req, res) => res.json({ ok: true }));\n\n// Handle React Router - serve index.html for all non-API routes\napp.get(\"*\", (req, res) => {\n  // Don't serve index.html for API routes\n  if (req.path.startsWith(\"/api/\") || req.path.startsWith(\"/health\")) {\n    return res.status(404).json({ error: \"API endpoint not found\" });\n  }\n\n  res.sendFile(path.join(distPath, \"index.html\"));\n});\n\nconst server = http.createServer(app);\ninitSocket(server);\n\nserver.listen(port, () => {\n  console.log(`ðŸš€ Fusion Starter server running on port ${port}`);\n  console.log(`ðŸ“± Frontend: http://localhost:${port}`);\n  console.log(`ðŸ”§ API: http://localhost:${port}/api`);\n});\n\n// Graceful shutdown\nprocess.on(\"SIGTERM\", () => {\n  console.log(\"ðŸ›‘ Received SIGTERM, shutting down gracefully\");\n  process.exit(0);\n});\n\nprocess.on(\"SIGINT\", () => {\n  console.log(\"ðŸ›‘ Received SIGINT, shutting down gracefully\");\n  process.exit(0);\n});\n"],"names":["IOServer","app","express"],"mappings":"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"}